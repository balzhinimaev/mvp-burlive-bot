name: Deploy Bot

on:
  push:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          mkdir -p /opt/bot && cd /opt/bot
          
          # Создаем docker-compose.yml если его нет
          if [ ! -f docker-compose.yml ]; then
            cat > docker-compose.yml << EOF
          services:
            bot:
              image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
              container_name: buryat-bot
              restart: unless-stopped
              env_file:
                - .env
              environment:
                - NODE_ENV=production
              ports:
                - "8080:8080"
              logging:
                driver: json-file
                options:
                  max-size: "10m"
                  max-file: "3"
          EOF
          fi
          
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker compose down || true
          docker compose up -d
          docker system prune -f